#pragma kernel GridToParticle

#pragma multi_compile _ USE_LINEAR_KERNEL USE_QUADRATIC_KERNEL

#include "../Common.hlsl"
#include "../GridParamsSampling.hlsl"

float _Flipness;

RWStructuredBuffer<Particle> _ParticleBufferRW;

StructuredBuffer<float3> _GridVelocityBufferRead;
StructuredBuffer<float3> _GridOriginalVelocityBufferRead;

[numthreads(128, 1, 1)]
void GridToParticle(uint3 thread_id : SV_DispatchThreadID)
{
    RETURN_IF_INVALID(thread_id);

    const uint p_id = thread_id.x;

    Particle p = _ParticleBufferRW[p_id];

    const float3 g_origin_vel = SampleGridVector(p.position, _GridOriginalVelocityBufferRead);
    const float3 g_vel = SampleGridVector(p.position, _GridVelocityBufferRead);

    const float3 p_pic_vel = g_vel;
    const float3 p_flip_vel = p.velocity + (g_vel - g_origin_vel);

    p.velocity = lerp(p_pic_vel, p_flip_vel, _Flipness);

    _ParticleBufferRW[p_id] = p;
}